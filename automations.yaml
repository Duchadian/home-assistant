- alias: Reset waste notification
  trigger:
    platform: state
    entity_id: input_boolean.waste_moved
    to: 'on'
    for:
      hours: 12
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.waste_moved
- alias: Waste has not been moved
  trigger:
    platform: time_pattern
    hours: "/1"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.waste_moved
        state: 'off'
      - condition: time
        after: '18:00:00'
        before: '23:00:00'
      - condition: template
        value_template: "{{ states('sensor.afvalwijzer_tomorrow') != 'Geen' }}"
  action:
    - service: notify.matrix_home
      data:
        title: "Afval"
        message: 'Het is vandaag - {{ now().strftime("%d-%m-%Y") }}. Afvaltype(n): {{ states.sensor.afvalwijzer_tomorrow.state }} wordt opgehaald op: {{ (as_timestamp(now()) + (24*3600)) | timestamp_custom("%d-%m-%Y", True) }}!'
- alias: "Send the shopping list"
  trigger:
    platform: event
    event_type: matrix_command
    event_data:
      command: get_shopping_list
  action:
    service: notify.matrix_home
    data:
      message: >
        On the shopping list are:
        {% for item in states("sensor.shopping_list_items").split("\n") %}
          - {{ item.strip('"') }}
        {% endfor %}
      target: "{{ trigger.event.data['room'] }}"
- alias: "Add to shopping list"
  trigger:
    platform: event
    event_type: matrix_command
    event_data:
      command: add_shopping_list_item
  action:
    service: shopping_list.add_item
    data:
      name: "{{ trigger.event.data.args.item }}"
- alias: "Laundry is done"
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.laundry
  action:
  - service: notify.matrix_home
    data:
      message: "The laundry should be done!"
- alias: "Respond to door"
  trigger:
    platform: state
    entity_id: binary_sensor.doorbell_doorbell_pressed
    from: "off"
    to: "on"
  action:
    - service: downloader.download_file
      data:
        url: "{{ states('input_text.base_url') }}/api/camera_proxy/camera.doorbell_last_event?token={{ state_attr('camera.doorbell_last_event', 'access_token') }}"
        filename: "last_event.jpg"
        overwrite: true
    - service: notify.matrix_home
      data:
        message: "There is someone at the door!"
        data:
          images:
            - '/config/downloads/last_event.jpg'

